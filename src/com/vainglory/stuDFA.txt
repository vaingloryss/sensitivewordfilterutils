敏感词文字过滤是一个网站必不可少的功能，如何设计一个好的、高效的过滤算法是非常有必要的。作为一般开发人员来说首先考虑的肯定是简单的匹配，
这样是可以实现功能，但效率比较慢，在高级一点的就是正则表达式，比前一个好一点，但终究还是一丘之貉，非常遗憾，两种方法都不可取。
最好的解决方案是DFA算法。

一、DFA算法

DFA全称为：Deterministic Finite Automaton,即确定有穷自动机。
其特征为：有一个有限状态集合和一些从一个状态通向另一个状态的边，每条边上标记有一个符号，其中一个状态是初态，某些状态是终态。
但不同于不确定的有限自动机，DFA中不会有从同一状态出发的两条边标志有相同的符号。

简单点说就是，它是是通过event和当前的state得到下一个state，即event+state=nextstate。
理解为系统中有多个节点，通过传递进入的event，来确定走哪个路由至另一个节点，而节点是有限的。

DFA
https://www.cnblogs.com/AndyEvans/p/10240790.html

2.javac编译器的基本结构
(1)步骤:
<1>读取源码，进行词法分析。也就是找出源码字节中的关键字，识别出合法的关键字，最后得出一些规范化的Token(中文意思是“标记“、”象征”等)流。
<2>对Token流进行语法分析，检查关键词的组合是否符合语法，最后得到抽象的语法树（语法树是吧语言的主要此法用一个结构化的形式组合在一起）
<3>进行语法分析，把难懂的，复杂的语法转化成更加简单的的语法(对计算机来说)，最后得到一个注解过后的抽象语法树
<4>通过字节码生成器将经过注解的抽象语法树生成字节码
（2）Javac的四大模块：词法分析器、语法分析器、语义分析器和代码生成器

原文链接：https://blog.csdn.net/wang_jiao_jiao/article/details/79715548

{
    哈={
        哈={
            哈={
                isEnd=1
            },
            isEnd=0
        },
        isEnd=0,
        嘿={
            isEnd=0,
            嘿={
                isEnd=1
            }
        }
    }
}

















